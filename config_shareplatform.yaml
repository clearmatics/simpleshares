#
# Schema version of the content. Used by the SDK to apply the corresponding parsing rules.
#
version: 1.0.0

#
# The client section used by GO SDK.
#
client:

  # Which organization does this application instance belong to? The value must be the name of an org
  # defined under "organizations"
  organization: alice

  logging:
    level: info


  # Root of the MSP directories with keys and certs.
  cryptoconfig:
    path: ${GOPATH}/src/github.com/clearmatics/ion-fabric/network/fixtures/fabric/v1/crypto-config

  # Some SDKs support pluggable KV stores, the properties under "credentialStore"
  # are implementation specific
  credentialStore:
    # [Optional]. Used by user store. Not needed if all credentials are embedded in configuration
    # and enrollments are performed elswhere.
    path: "/tmp/state-store"

    # [Optional]. Specific to the CryptoSuite implementation used by GO SDK. Software-based implementations
    # requiring a key store. PKCS#11 based implementations does not.
    cryptoStore:
      # Specific to the underlying KeyValueStore that backs the crypto key store.
      path: /tmp/msp

   # BCCSP config for the client. Used by GO SDK.
  BCCSP:
    security:
     enabled: true
     default:
      provider: "SW"
     hashAlgorithm: "SHA2"
     softVerify: true
     ephemeral: false
     level: 256

  tlsCerts:
    # [Optional]. Use system certificate pool when connecting to peers, orderers (for negotiating TLS) Default: false
    systemCertPool: false

    # [Optional]. Client key and cert for TLS handshake with peers and orderers
    client:
      key:
        path: ${GOPATH}/src/github.com/clearmatics/ion-fabric/network/fixtures/fabric/v1/crypto-config/peerOrganizations/tls.shareplatform.com/users/User1@tls.shareplatform.com/tls/client.key
      cert:
        path: ${GOPATH}/src/github.com/clearmatics/ion-fabric/network/fixtures/fabric/v1/crypto-config/peerOrganizations/tls.shareplatform.com/users/User1@tls.shareplatform.com/tls/client.crt

#
# [Optional]. But most apps would have this section so that channel objects can be constructed
# based on the content below. If an app is creating channels, then it likely will not need this
# section.
#
channels:
  # name of the channel
  mychannel:
    # Required. list of peers from participating orgs
    peers:
      local.peer0.alice.shareplatform.com:
        # [Optional]. will this peer be sent transaction proposals for endorsement? The peer must
        # have the chaincode installed. The app can also use this property to decide which peers
        # to send the chaincode install request. Default: true
        endorsingPeer: true

        # [Optional]. will this peer be sent query proposals? The peer must have the chaincode
        # installed. The app can also use this property to decide which peers to send the
        # chaincode install request. Default: true
        chaincodeQuery: true

        # [Optional]. will this peer be sent query proposals that do not require chaincodes, like
        # queryBlock(), queryTransaction(), etc. Default: true
        ledgerQuery: true

        # [Optional]. will this peer be the target of the SDK's listener registration? All peers can
        # produce events but the app typically only needs to connect to one to listen to events.
        # Default: true
        eventSource: true

      local.peer0.bob.shareplatform.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true

    # [Optional]. The application can use these options to perform channel operations like retrieving channel
    # config etc.
    policies:
      #[Optional] options for retrieving channel configuration blocks
      queryChannelConfig:
        #[Optional] min number of success responses (from targets/peers)
        minResponses: 1
        #[Optional] channel config will be retrieved for these number of random targets
        maxTargets: 1
        #[Optional] retry options for query config block
        retryOpts:
          #[Optional] number of retry attempts
          attempts: 5
          #[Optional] the back off interval for the first retry attempt
          initialBackoff: 500ms
          #[Optional] the maximum back off interval for any retry attempt
          maxBackoff: 5s
          #[Optional] he factor by which the initial back off period is exponentially incremented
          backoffFactor: 2.0

  # multi-org test channel
  sharechannel:
    peers:
      local.peer0.alice.shareplatform.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true

      local.peer0.bob.shareplatform.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true

    # [Optional]. The application can use these options to perform channel operations like retrieving channel
    # config etc.
    policies:
      #[Optional] options for retrieving channel configuration blocks
      queryChannelConfig:
        #[Optional] min number of success responses (from targets/peers)
        minResponses: 1
        #[Optional] channel config will be retrieved for these number of random targets
        maxTargets: 1
        #[Optional] retry options for query config block
        retryOpts:
          #[Optional] number of retry attempts
          attempts: 5
          #[Optional] the back off interval for the first retry attempt
          initialBackoff: 500ms
          #[Optional] the maximum back off interval for any retry attempt
          maxBackoff: 5s
          #[Optional] he factor by which the initial back off period is exponentially incremented
          backoffFactor: 2.0

#
# list of participating organizations in this network
#
organizations:
  alice:
    mspid: AliceMSP

    # This org's MSP store (absolute path or relative to client.cryptoconfig)
    cryptoPath:  peerOrganizations/alice.shareplatform.com/users/{username}@alice.shareplatform.com/msp

    peers:
      - local.peer0.alice.shareplatform.com
      - local.peer1.alice.shareplatform.com

    # [Optional]. Certificate Authorities issue certificates for identification purposes in a Fabric based
    # network. Typically certificates provisioning is done in a separate process outside of the
    # runtime network. Fabric-CA is a special certificate authority that provides a REST APIs for
    # dynamic certificate management (enroll, revoke, re-enroll). The following section is only for
    # Fabric-CA servers.
    certificateAuthorities:
      - local.ca.alice.shareplatform.com

  # the profile will contain public information about organizations other than the one it belongs to.
  # These are necessary information to make transaction lifecycles work, including MSP IDs and
  # peers with a public URL to send transaction proposals. The file will not contain private
  # information reserved for members of the organization, such as admin key and certificate,
  # fabric-ca registrar enroll ID and secret, etc.
  bob:
    mspid: BobMSP

    # This org's MSP store (absolute path or relative to client.cryptoconfig)
    cryptoPath:  peerOrganizations/bob.shareplatform.com/users/{username}@bob.shareplatform.com/msp

    peers:
      - local.peer0.bob.shareplatform.com
      - local.peer1.bob.shareplatform.com

    certificateAuthorities:
      - local.ca.bob.shareplatform.com

  # Orderer Org name
  ordererorg:
      # Membership Service Provider ID for this organization
      mspID: "OrdererOrg"

      # Needed to load users crypto keys and certs for this org (absolute path or relative to global crypto path, DEV mode)
      cryptoPath: ordererOrganizations/shareplatform.com/users/{username}@shareplatform.com/msp

#
# List of orderers to send transaction and channel create/update requests to. For the time
# being only one orderer is needed. If more than one is defined, which one get used by the
# SDK is implementation specific. Consult each SDK's documentation for its handling of orderers.
#
orderers:
  local.orderer.shareplatform.com:
    url: localhost:7050

    # these are standard properties defined by the gRPC library
    # they will be passed in as-is to gRPC client constructor
    grpcOptions:
      ssl-target-name-override: orderer.shareplatform.com
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: ${GOPATH}/src/github.com/clearmatics/ion-fabric/network/fixtures/fabric/v1/crypto-config/ordererOrganizations/shareplatform.com/tlsca/tlsca.shareplatform.com-cert.pem

#
# List of peers to send various requests to, including endorsement, query
# and event listener registration.
#
peers:
  local.peer0.alice.shareplatform.com:
    # this URL is used to send endorsement and query requests
    url: localhost:7051
    # eventUrl is only needed when using eventhub (default is delivery service)
    eventUrl: localhost:7053

    grpcOptions:
      ssl-target-name-override: peer0.alice.shareplatform.com
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: ${GOPATH}/src/github.com/clearmatics/ion-fabric/network/fixtures/fabric/v1/crypto-config/peerOrganizations/alice.shareplatform.com/tlsca/tlsca.alice.shareplatform.com-cert.pem

  local.peer1.alice.shareplatform.com:
    # this URL is used to send endorsement and query requests
    url: localhost:7151
    # eventUrl is only needed when using eventhub (default is delivery service)
    eventUrl: localhost:7153

    grpcOptions:
      ssl-target-name-override: peer1.alice.shareplatform.com
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: ${GOPATH}/src/github.com/clearmatics/ion-fabric/network/fixtures/fabric/v1/crypto-config/peerOrganizations/alice.shareplatform.com/tlsca/tlsca.alice.shareplatform.com-cert.pem

  local.peer0.bob.shareplatform.com:
    url: localhost:8051
    # eventUrl is only needed when using eventhub (default is delivery service)
    eventUrl: localhost:8053
    grpcOptions:
      ssl-target-name-override: peer0.bob.shareplatform.com
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      path: ${GOPATH}/src/github.com/clearmatics/ion-fabric/network/fixtures/fabric/v1/crypto-config/peerOrganizations/bob.shareplatform.com/tlsca/tlsca.bob.shareplatform.com-cert.pem

  local.peer1.bob.shareplatform.com:
    url: localhost:9051
    # eventUrl is only needed when using eventhub (default is delivery service)
    eventUrl: localhost:9053
    grpcOptions:
      ssl-target-name-override: peer1.bob.shareplatform.com
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      path: ${GOPATH}/src/github.com/clearmatics/ion-fabric/network/fixtures/fabric/v1/crypto-config/peerOrganizations/bob.shareplatform.com/tlsca/tlsca.bob.shareplatform.com-cert.pem

#
# Fabric-CA is a special kind of Certificate Authority provided by Hyperledger Fabric which allows
# certificate management to be done via REST APIs. Application may choose to use a standard
# Certificate Authority instead of Fabric-CA, in which case this section would not be specified.
#
certificateAuthorities:
  ca.alice.shareplatform.com:
    url: https://ca.alice.shareplatform.com:7054
    tlsCACerts:
      # Comma-Separated list of paths
      path: ${GOPATH}/src/github.com/clearmatics/ion-fabric/network/fixtures/fabric/v1/crypto-config/peerOrganizations/alice.shareplatform.com/tlsca/tlsca.alice.shareplatform.com-cert.pem
      # Client key and cert for SSL handshake with Fabric CA
      client:
        key:
          path: ${GOPATH}/src/github.com/clearmatics/ion-fabric/network/fixtures/fabric/v1/crypto-config/peerOrganizations/tls.shareplatform.com/users/User1@tls.shareplatform.com/tls/client.key
        cert:
          path: ${GOPATH}/src/github.com/clearmatics/ion-fabric/network/fixtures/fabric/v1/crypto-config/peerOrganizations/tls.shareplatform.com/users/User1@tls.shareplatform.com/tls/client.crt

    # Fabric-CA supports dynamic user enrollment via REST APIs. A "root" user, a.k.a registrar, is
    # needed to enroll and invoke new users.
    registrar:
      enrollId: admin
      enrollSecret: adminpw
    # [Optional] The optional name of the CA.
    caName: ca.alice.shareplatform.com
  ca.bob.shareplatform.com:
    url: https://ca.bob.shareplatform.com:8054
    tlsCACerts:
      # Comma-Separated list of paths
      path: ${GOPATH}/src/github.com/clearmatics/ion-fabric/network/fixtures/fabric/v1/crypto-config/peerOrganizations/bob.shareplatform.com/tlsca/tlsca.bob.shareplatform.com-cert.pem
      # Client key and cert for SSL handshake with Fabric CA
      client:
        key:
          path: ${GOPATH}/src/github.com/clearmatics/ion-fabric/network/fixtures/fabric/v1/crypto-config/peerOrganizations/tls.shareplatform.com/users/User1@tls.shareplatform.com/tls/client.key
        cert:
          path: ${GOPATH}/src/github.com/clearmatics/ion-fabric/network/fixtures/fabric/v1/crypto-config/peerOrganizations/tls.shareplatform.com/users/User1@tls.shareplatform.com/tls/client.crt

     # Fabric-CA supports dynamic user enrollment via REST APIs. A "root" user, a.k.a registrar, is
     # needed to enroll and invoke new users.
    registrar:
      enrollId: admin
      enrollSecret: adminpw
    # [Optional] The optional name of the CA.
    caName: ca.bob.shareplatform.com

entityMatchers:
  peer:
    - pattern: peer0.alice.shareplatform.com:7051
      urlSubstitutionExp: localhost:7051
      eventUrlSubstitutionExp: localhost:7053
      sslTargetOverrideUrlSubstitutionExp: peer0.alice.shareplatform.com
      mappedHost: local.peer0.alice.shareplatform.com
    - pattern: peer1.alice.shareplatform.com:7151
      urlSubstitutionExp: localhost:7151
      eventUrlSubstitutionExp: localhost:7153
      sslTargetOverrideUrlSubstitutionExp: peer1.alice.shareplatform.com
      mappedHost: local.peer1.alice.shareplatform.com
    - pattern: peer0.bob.shareplatform.com:8051
      urlSubstitutionExp: localhost:8051
      eventUrlSubstitutionExp: localhost:8053
      sslTargetOverrideUrlSubstitutionExp: peer0.bob.shareplatform.com
      mappedHost: local.peer0.bob.shareplatform.com
    - pattern: peer1.bob.shareplatform.com:9051
      urlSubstitutionExp: localhost:9051
      eventUrlSubstitutionExp: localhost:9053
      sslTargetOverrideUrlSubstitutionExp: peer1.bob.shareplatform.com
      mappedHost: local.peer1.bob.shareplatform.com

  orderer:
    - pattern: orderer.shareplatform.com
      urlSubstitutionExp: localhost:7050
      sslTargetOverrideUrlSubstitutionExp: orderer.shareplatform.com
      mappedHost: local.orderer.shareplatform.com
